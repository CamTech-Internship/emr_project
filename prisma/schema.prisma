generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Hospital {
  id        String   @id @default(cuid())
  code      String   @unique
  name      String
  config    String?  // JSON as text in SQLite
  users     User[]
  patients  Patient[]
  alerts    Alert[]
  createdAt DateTime @default(now())
}

model User {
  id              String   @id @default(cuid())
  email           String   @unique
  passwordHash    String
  role            String   // ADMIN | DOCTOR | FRONT_DESK | PATIENT
  hospitalId      String
  hospital        Hospital @relation(fields: [hospitalId], references: [id])
  patientId       String?  @unique // Link to Patient record for PATIENT role users
  patientProfile  Patient? @relation("user_patient", fields: [patientId], references: [id])
  tasks           Task[]
  messagesSent    Message[] @relation("messages_sent")
  messagesRecv    Message[] @relation("messages_recv")
  appointments    Appointment[]
  prescriptions   Prescription[]
  createdAt       DateTime @default(now())
}
 

model Patient {
  id            String   @id @default(cuid())
  hospitalId    String
  hospital      Hospital @relation(fields: [hospitalId], references: [id])
  name          String
  dob           DateTime?
  contactInfo   String?    // MVP; migrate to encrypted JSON before prod
  user          User?    @relation("user_patient")
  appointments  Appointment[]
  ehr           EHRRecord[]
  prescriptions Prescription[]
  createdAt     DateTime @default(now())
}

model Appointment {
  id         String   @id @default(cuid())
  patientId  String
  patient    Patient  @relation(fields: [patientId], references: [id])
  doctorId   String
  doctor     User     @relation(fields: [doctorId], references: [id])
  startAt    DateTime
  endAt      DateTime
  reason     String?
  status     String   @default("scheduled")
  createdAt  DateTime @default(now())
}

model Task {
  id         String   @id @default(cuid())
  assigneeId String
  assignee   User     @relation(fields: [assigneeId], references: [id])
  title      String
  status     String   @default("todo") // todo, in_progress, done
  dueAt      DateTime?
  createdAt  DateTime @default(now())
}

model Alert {
  id         String   @id @default(cuid())
  hospitalId String
  hospital   Hospital @relation(fields: [hospitalId], references: [id])
  kind       String
  payload    String   // JSON as text in SQLite
  createdAt  DateTime @default(now())
}

model Message {
  id        String   @id @default(cuid())
  threadId  String?
  fromId    String
  toId      String
  from      User     @relation("messages_sent", fields: [fromId], references: [id])
  to        User     @relation("messages_recv", fields: [toId], references: [id])
  body      String   // MVP; migrate to encrypted text
  seenAt    DateTime?
  createdAt DateTime @default(now())
}

model EHRRecord {
  id         String   @id @default(cuid())
  patientId  String
  patient    Patient  @relation(fields: [patientId], references: [id])
  type       String
  payload    String   // JSON as text in SQLite; encrypt later
  createdAt  DateTime @default(now())
}

model Prescription {
  id         String   @id @default(cuid())
  patientId  String
  patient    Patient  @relation(fields: [patientId], references: [id])
  doctorId   String
  doctor     User     @relation(fields: [doctorId], references: [id])
  payload    String   // JSON as text in SQLite
  createdAt  DateTime @default(now())
}
